Anli Ni, Section C              anlini
Colin  Gilgenbach, Section C    cgilgenbach

Triangle Solver

PROGRAM DESCRIPTION:  

This program will use SFML to draw a triangle that is dimensioned by the user. 
At first, a default equilateral triangle appears. As the triangle is given two 
angles and a side or two sides and an angle, it is adjusted and the triangle is
displayed with labels identifying its side lengths and angle values. The user 
can make adjustments to the side lengths and angles by clicking on them. When 
clicked on, the user can enter a new value for the side length or angle. When the
user enters this value, the triangle will adjust to fit the dimension. While the
user is making adjustments to the triangle, the fixed dimensions will show up in
one color and the unfixed dimensions will show up in another.

PROGRAM DOCUMENTATION:

The user will need to click on dimensions in the triangle and enter known values.
The program will then find a triangle that fits the given dimensions, and display
it to the user. Users can cancel a set dimension by clicking on it and pressing
escape, and can clear all settings by pressing c. This program could be expanded
to describe more properties of the triangle. It could also show both possibilities
for an ambiguous triangle, instead of just one.

TESTS:

-Enter 3 sides and solve for angles (both valid and invalid combinations)
-Enter 2 sides and an angle, and solve (including ambiguous case)
-Enter two angles and a side, and solve (both included side and opposite side)
-Enter less than three dimensions, and verify that the triangle finds a solution
-Enter more than three dimensions, and verify that an error message is displayed
-Cancel a set dimension using escape
-Try to set a dimension using an impossible value, and verify that an error message is displayed

REFLECTIONS:

This project taught us how to expand our applications of SFML. We learned how to 
take in a mouse or keyboard click and perform a certain function based on the 
position of the mouse click or the specific key. To solve the triangle, we had
to apply geometry carefully, taking care to note all edge cases and potential
errors. We also needed to use trig to successfully draw the solved triangle. If
we were to do this project again, we'd spend more time carefully thinking through
our object design, and planning out the functions and variables that connect the objects.
Overall, the program incorporates almost all of the concepts we've covered this semester,
and combining them into one cohesive program was no easy task.